# Default values for tangle.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ivanklee86/tangle
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.14"

imagePullSecrets: []
nameOverride: "tangle"
fullnameOverride: ""

# Configuration specific for the Tangle app.
tangle:
  # -- Path configuration file is mounted.
  configPath: "/etc/tangle"

  # -- Configures connection to ArgoCDs.
  argoCDs: {}
    # test:
    #   address: "localhost:8080"
    #   insecure: true
    #   authTokenEnvVar: "ARGOCD_TOKEN"

  # Configures order you want to return ArgoCD results.  e.g. [test, preprod, prod]
  sortOrder: []

  # References to secrets where ArgoCD tokens are stored.
  tokenSecrets: []
    # - name: "ARGOCD_TOKEN"
    #   secret: "tangle-secret"
    #   secretKey: "ARGOCD_TOKEN"

  listWorkers: 10
  manifestWorkers: 5
  hardRefreshWorkers: 5


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

deployment:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /health
      port: http

  readinessProbe:
    httpGet:
      path: /health
      port: http

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false


  nodeSelector: {}
  tolerations: []
  affinity: {}


service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
